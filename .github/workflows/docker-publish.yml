name: Docker

# https://github.com/marketplace/actions/deploy-to-heroku#deploy-with-docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  REGISTRY: ghcr.io

jobs:
  build-heroku:
    needs: build-package
    runs-on: ubuntu-latest
    steps:
      # Check-out your repository.
      - 
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Push docker container to Heroku. # Your custom step name
        uses: gonuit/heroku-docker-deploy@v1.3.3 # GitHub action name (leave it as it is).
        with:
          # Below you must provide variables for your Heroku app.

          # The email address associated with your Heroku account.
          # If you don't want to use repository secrets (which is recommended) you can do:
          # email: my.email@example.com
          email: ${{ secrets.HEROKU_EMAIL }}
          
          # Heroku API key associated with provided user's email.
          # Api Key is available under your Heroku account settings.
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          
          # Name of the heroku application to which the build is to be sent.
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}

          # (Optional, default: "./")
          # Dockerfile directory.
          # For example, if you have a Dockerfile in the root of your project, leave it as follows:
          dockerfile_directory: ./

          # (Optional, default: "Dockerfile")
          # Dockerfile name.
          dockerfile_name: Dockerfile

          # (Optional, default: "")
          # Additional options of docker build command.
          # Cache from Github Container Registry, build below
          docker_options: "--cache-from ${{ env.REGISTRY }}/${{ github.repository }}:latest"

          # (Optional, default: "web")
          # Select the process type for which you want the docker container to be uploaded.
          # By default, this argument is set to "web".
          # For more information look at https://devcenter.heroku.com/articles/process-model
          process_type: web

  build-package:
    name: Push image to Github Container Registry
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to Github Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push massif-visualizer
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: linux/amd64
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository }}:latest
          cache-to: type=inline
          tags: ${{ env.REGISTRY }}/${{ github.repository }}:latest
